---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Section from '../../components/Section.astro';
import Blogpost from '../../components/Blogpost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');
  // a set doesn't allows multiple entries of the same value, so the ending result is the set with all unique tags of the posts.
  const uniqueTags = new Set();
  allPosts.forEach( post => {
    post.frontmatter.tags?.forEach( tag => uniqueTags.add(tag) )
  })
  return Array.from(uniqueTags).map( tag => {
    // 1. get all posts that has the tag
    // return an object with params(tag) and props(filteredPosts)
    // these objects creates the array returned by the function
    const filteredPosts =  allPosts.filter( post => post.frontmatter.tags.includes(tag) )
    return {
      params: { tag },
      props: { posts: filteredPosts }
    }
  })
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const postsByDate = posts.sort((a, b) => {
  return a.frontmatter.pubDate < b.frontmatter.pubDate ? 1 : -1;
});
---
<BaseLayout pageTitle={tag}>
  <Section className="bg-gray-100">
    <h1 class="text-4xl">Posts tagged with {tag}</h1>
    <div class="flex flex-wrap gap-8">
      { postsByDate?.length > 0
        ? postsByDate.map( post =>
            <Blogpost
                title={post.frontmatter.title}
                url={post.url}
                date={post.frontmatter.pubDate}
                desc={post.frontmatter.description}
                image={post.frontmatter.image.url}
            />)
        : <div>There are no posts tagged with {tag}</div>
      }
    </div>
  </Section>
</BaseLayout>